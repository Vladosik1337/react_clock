{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockTime","Date","clockInterval","this","window","setInterval","setState","props","hasClock","console","info","toUTCString","slice","clearInterval","className","clockName","Component","getRandomName","value","now","toString","App","clockNameId","handlerRightClick","handlerLeftClick","document","addEventListener","_prevProps","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAWaA,EAAb,4MACEC,MAAyB,CACvBC,UAAW,IAAIC,MAFnB,EAKEC,cAAgB,EALlB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,cAAgBE,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEN,UAAW,IAAIC,OAE3B,EAAKM,MAAMC,UAEbC,QAAQC,KAAK,EAAKX,MAAMC,UAAUW,cAAcC,OAAO,IAAK,MAE7D,OAfP,kCAkBE,WACER,OAAOS,cAAcV,KAAKD,iBAnB9B,oBAsBE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKI,MAAMQ,YAGb,YAED,sBAAMD,UAAU,cAAhB,SACGX,KAAKJ,MAAMC,UAAUW,cAAcC,OAAO,IAAK,YAhC1D,GAA2BI,a,MCP3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWR,OAAO,GAE3C,MAAM,SAAN,OAAgBM,GAQX,IAAMG,EAAb,4MACEtB,MAAyB,CACvBS,UAAU,EACVO,UAAW,WAHf,EAMEO,YAAc,EANhB,EA8BEC,kBAAoB,WAClB,EAAKjB,SAAS,CAAEE,UAAU,KA/B9B,EAkCEgB,iBAAmB,WACjB,EAAKlB,SAAS,CAAEE,UAAU,KAnC9B,uDAQE,WAAqB,IAAD,OAClBL,KAAKmB,YAAclB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAES,UAAWE,QAC1B,MAEHQ,SAASC,iBAAiB,cAAevB,KAAKoB,mBAC9CE,SAASC,iBAAiB,QAASvB,KAAKqB,oBAd5C,gCAiBE,SAAmBG,EAAgBC,GAC7BA,EAAUb,YAAcZ,KAAKJ,MAAMgB,WAAaZ,KAAKJ,MAAMS,UAE7DC,QAAQoB,MAAR,uBAA8BD,EAAUb,UAAxC,eAAwDZ,KAAKJ,MAAMgB,cApBzE,kCAwBE,WACEU,SAASK,oBAAoB,QAAS3B,KAAKqB,kBAC3CC,SAASK,oBAAoB,cAAe3B,KAAKoB,mBACjDnB,OAAOS,cAAcV,KAAKmB,eA3B9B,oBAsCE,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCX,KAAKJ,MAAMS,UACV,cAAC,EAAD,CACEA,SAAUL,KAAKJ,MAAMS,SACrBO,UAAWZ,KAAKJ,MAAMgB,mBA7ClC,GAAyBC,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.7cd9c358.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  clockTime: Date,\n};\n\ntype Props = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    clockTime: new Date(),\n  };\n\n  clockInterval = 0;\n\n  componentDidMount() {\n    this.clockInterval = window.setInterval(() => {\n      this.setState({ clockTime: new Date() });\n\n      if (this.props.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info(this.state.clockTime.toUTCString().slice(-12, -4));\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.clockTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    this.clockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handlerRightClick);\n    document.addEventListener('click', this.handlerLeftClick);\n  }\n\n  componentDidUpdate(_prevProps: {}, prevState: Readonly<State>) {\n    if (prevState.clockName !== this.state.clockName && this.state.hasClock) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handlerLeftClick);\n    document.removeEventListener('contextmenu', this.handlerRightClick);\n    window.clearInterval(this.clockNameId);\n  }\n\n  handlerRightClick = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handlerLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && (\n          <Clock\n            hasClock={this.state.hasClock}\n            clockName={this.state.clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}