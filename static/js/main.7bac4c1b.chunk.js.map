{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","clockTime","Date","clockInterval","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","prevName","clockName","currentName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","App","hasClock","clockNameId","handleRightClick","handleLeftClick","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,UAAW,IAAIC,MAFnB,EAKEC,cAAgB,EALlB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,cAAgBE,OAAOC,aAAY,WACtC,EAAKC,SAAS,CAAEN,UAAW,IAAIC,OAE/BM,QAAQC,KAAK,EAAKT,MAAMC,UAAUS,cAAcC,OAAO,IAAK,MAC3D,OAZP,gCAeE,SAAmBC,GACjB,IAAmBC,EAAaD,EAAxBE,UACWC,EAAgBX,KAAKY,MAAhCF,UAEJD,IAAaE,GAEfP,QAAQS,MAAR,uBAA8BJ,EAA9B,eAA6CE,MArBnD,kCAyBE,WACEV,OAAOa,cAAcd,KAAKD,iBA1B9B,oBA6BE,WACE,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGf,KAAKY,MAAMF,YAGb,YAED,sBAAMK,UAAU,cAAhB,SACGf,KAAKJ,MAAMC,UAAUS,cAAcC,OAAO,IAAK,YAvC1D,GAA2BS,a,MCN3B,SAASC,IACP,IAAMC,EAAQpB,KAAKqB,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBW,GAQX,IAAMG,EAAb,4MACEzB,MAAyB,CACvB0B,UAAU,EACVZ,UAAW,WAHf,EAMEa,YAAc,EANhB,EAuBEC,iBAAmB,WACjB,EAAKrB,SAAS,CAAEmB,UAAU,KAxB9B,EA2BEG,gBAAkB,WAChB,EAAKtB,SAAS,CAAEmB,UAAU,KA5B9B,uDAQE,WAAqB,IAAD,OAClBtB,KAAKuB,YAActB,OAAOC,aAAY,WACpC,EAAKC,SAAS,CAAEO,UAAWO,QAC1B,MAEHS,SAASC,iBAAiB,cAAe3B,KAAKwB,kBAC9CE,SAASC,iBAAiB,QAAS3B,KAAKyB,mBAd5C,kCAiBE,WACEC,SAASE,oBAAoB,QAAS5B,KAAKyB,iBAC3CC,SAASE,oBAAoB,cAAe5B,KAAKwB,kBACjDvB,OAAOa,cAAcd,KAAKuB,eApB9B,oBA+BE,WACE,MAAgCvB,KAAKJ,MAA7Bc,EAAR,EAAQA,UAAWY,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CACCO,GACC,cAAC,EAAD,CACEZ,UAAWA,WAvCvB,GAAyBM,aCZzBa,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.7bac4c1b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  clockTime: Date,\n};\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    clockTime: new Date(),\n  };\n\n  clockInterval = 0;\n\n  componentDidMount() {\n    this.clockInterval = window.setInterval(() => {\n      this.setState({ clockTime: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.clockTime.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName: prevName } = prevProps;\n    const { clockName: currentName } = this.props;\n\n    if (prevName !== currentName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.clockInterval);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.clockTime.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  clockNameId = 0;\n\n  componentDidMount() {\n    this.clockNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    window.clearInterval(this.clockNameId);\n  }\n\n  handleRightClick = () => {\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && (\n          <Clock\n            clockName={clockName}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}